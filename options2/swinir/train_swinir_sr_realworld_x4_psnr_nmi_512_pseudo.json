{
  "task": "swinir_NMI_x4_psnr_pseudo"     // real-world image sr. root/task/images-models-options
  , "model": "plain" // "plain" | "plain2" if two inputs
  , "gpu_ids": [0]
  , "dist": false

  , "scale": 4       // broadcast to "datasets"
  , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color

  , "path": {
    "root": "/home/xiaoyun/Code/RefCode/KAIR/model_zoo/model_w_pseudo/"            // "denoising" | "superresolution" | "dejpeg"
    , "pretrained_netG": "/home/xiaoyun/Code/RefCode/KAIR/model_zoo/model_w_pseudo/netG"      // path of pretrained model
    , "pretrained_netE": "/home/xiaoyun/Code/RefCode/KAIR/model_zoo/model_w_pseudo/netE"      // path of pretrained model
  }

  , "datasets": {
    "train": {
      "name": "train_dataset"           // just name
      , "dataset_type": "sr"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
      , "dataroot_H":  "/data/hdd/Data/GCI/Final/data/train/100/micro/gt"  // path of H training dataset. DIV2K (800 training images) + Flickr2K (2650 images) + + OST (10324 images)
      , "dataroot_L":  "/data/hdd/Data/GCI/Final/data/train/100/micro/lr128"           // path of L training dataset
      , "dataroot_pseudo_H":  "/data/hdd/Data/GCI/Final/GCI/Forward/pseudo/100/micro_pseudo/gt"
      , "dataroot_pseudo_L":  "/data/hdd/Data/GCI/Final/GCI/Forward/pseudo/100/micro_pseudo/lr128"
      , "pseudo_ratio": 0.5

      , "degradation_type": "bsrgan"    // "bsrgan" | "bsrgan_plus"
      , "H_size": 512                   // patch_size 256 | 288 | 320
      , "shuffle_prob": 0.1             //
      , "lq_patchsize": 64
      , "use_sharp": true

      , "dataloader_shuffle": true
      , "dataloader_num_workers": 8
      , "dataloader_batch_size": 3      // batch size 1 | 16 | 32 | 48 | 64 | 128. Total batch size =4x8=32 in SwinIR
    },
    "test": {
      "name": "val_dataset"           // just name
      , "dataset_type": "sr"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
      , "dataroot_H":  "/data/hdd/Data/GCI/Final/data/val/micro/gt"  // path of H training dataset. DIV2K (800 training images) + Flickr2K (2650 images) + + OST (10324 images)
      , "dataroot_L":  "/data/hdd/Data/GCI/Final/data/val/micro/lr128"           // path of L training dataset
      , "dataroot_pseudo_H":  ""
      , "dataroot_pseudo_L":  ""
    }
    
  }

  , "netG": {
    "net_type": "swinir"
    , "upscale": 4
    , "in_chans": 3
    , "img_size": 64
    , "window_size": 8
    , "img_range": 1.0
    , "depths": [6, 6, 6, 6, 6, 6]
    , "embed_dim": 180
    , "num_heads": [6, 6, 6, 6, 6, 6]
    , "mlp_ratio": 2
    , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
    , "resi_connection": "1conv"        // "1conv" | "3conv"

    , "init_type": "default"
  }

  , "train": {
    "G_lossfn_type": "l1"               // "l1" preferred | "l2sum" | "l2" | "ssim" | "charbonnier"
    , "G_lossfn_weight": 1.0            // default

    , "E_decay": 0.999                  // Exponential Moving Average for netG: set 0 to disable; default setting 0.999

    , "G_optimizer_type": "adam"        // fixed, adam is enough
    , "G_optimizer_lr": 2e-4            // learning rate
    , "G_optimizer_wd": 0               // weight decay, default 0
    , "G_optimizer_clipgrad": null      // unused
    , "G_optimizer_reuse": true         //

    , "G_scheduler_type": "MultiStepLR" // "MultiStepLR" is enough
    , "G_scheduler_milestones": [500000, 800000, 900000, 950000, 1000000]
    , "G_scheduler_gamma": 0.5

    , "G_regularizer_orthstep": null    // unused
    , "G_regularizer_clipstep": null    // unused

    , "G_param_strict": true
    , "E_param_strict": true

    , "checkpoint_test": 10000           // for testing
    , "checkpoint_save": 10000           // for saving model
    , "checkpoint_print": 1000           // for print
  }
}
